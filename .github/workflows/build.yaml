name: Image Builder

on:
  workflow_dispatch:
    inputs:
      pandoc_version:
        description: >-
          Pandoc version; must be either `main` or a release number
        default: main
        type: string
      base_system:
        description: Docker base systems (JSON array)
        default: "['static','ubuntu','alpine']"
        type: string
  schedule:
    - cron: '33 6 * * 1,4'

jobs:
  # Build images and store them as tar archive
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        stack: ${{ fromJSON( inputs.base_system ) }}
        version: ${{ inputs.pandoc_version == 'main' && 'edge' ||
                     inputs.pandoc_version}}

    env:
      PANDOC_VERSION: ${{ matrix.version }}
      STACK: ${{ matrix.stack }}

    steps:
      - uses: actions/checkout@v4

      - name: Show config
        run: make show-args

      - name: Build minimal image
        run: make minimal

      - name: Test minimal image
        run: make test-minimal

      # We can't build statically linked core or latex images
      - name: Build core image
        if: ${{ matrix.stack != 'static' }}
        run: make core

      - name: Build LaTeX image
        if: ${{ matrix.stack != 'static' }}
        run: make latex

      - name: Build Typst image
        if: ${{ matrix.stack != 'static' }}
        run: make typst

      - name: Build extra image
        if: ${{ matrix.stack != 'static' }}
        run: make extra

      - name: Test core image
        if: ${{ matrix.stack != 'static' }}
        run: make test-core

      - name: Test LaTeX image
        if: ${{ matrix.stack != 'static' }}
        run: make test-latex

      - name: Test extra image
        if: ${{ matrix.stack != 'static' }}
        run: make test-extra

      - name: Push
        if: >-
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          github.repository == 'pandoc/dockerfiles'
        run: |
          # Log into registry
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" |
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          make push-minimal
          if [ "$STACK" != 'static' ]; then
              make push-core
              make push-typst
              make push-latex
              make push-extra
          fi
